apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-deployment
  namespace: envoy
  labels:
    app: envoy

spec:
  replicas: 1

  selector:
    matchLabels:
      app: envoy

  template:
    metadata:
      name: envoy
      labels:
        app: envoy

    spec:
      containers:
        - name: envoy
          image: juliocesarmidia/envoy-proxy-01:v1.0.0
          imagePullPolicy: IfNotPresent
          ports:
          - name: envoy-http
            containerPort: 80
          - name: envoy-admin
            containerPort: 9901
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "400m"
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: envoy

spec:
  type: ClusterIP
  ports:
  - name: envoy-http
    port: 80
    targetPort: envoy-http
    protocol: TCP

  - name: envoy-admin
    port: 9901
    targetPort: envoy-admin
    protocol: TCP

  selector:
    app: envoy

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  namespace: envoy

  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/force-ssl-redirect: "false"
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rewrite-target: /
    traefik.ingress.kubernetes.io/load-balancer-method: "wrr"

spec:
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: envoy
            servicePort: envoy-http
